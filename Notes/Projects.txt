1. First Blog App:

        mkdir Blog App
        cd Blog App
        create-react-app blog
        cd blog
        npm start OR sudo npm start
        
        Go to; https://startbootstrap.com/themes/
             Select the "Clean Blog" Template; https://startbootstrap.com/previews/clean-blog/
             download it on your pc
        
        Extract the template, copy everything to your blog folder under public directory, except "index.html" file
        On the index.html of original template;
            copy the bootstrap/css fonts to your index.html file header,
            copy the jQuery section of the body to and paste it too in the same current index.html file.
            Now, copy the body upto the footer section and paste it into the src/app.js inside the "<div> tag </div>"
            Do this while regarding the JSX Syntax
            Change the "class" keyword to "className" on the div tags
       Link for changing correct/valid "Anchor-tag" in  Reactjs;
                                https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md
                  instead, use <a href="/#" > on the anchor tag to avoid problems.
            change the index.html, css path to "css/clean-blog.css" in order to add style for the header bg image
            Under src, create a new folder named "Navbar.js" , cut the navbar section from App.js,
            and paste it inside the later navbar component
            Repeat the same steps for Header, Container and footer too
            But on the Container component, try to inject the "post-preview" class, inside it and place it on its own component
            
            
2. Timer App:
        mkdir Timer App
        cd Timer App
        create-react-app stop-watch
        cd stop-watch
        npm start OR sudo npm start
        
        On src, create a new Component file "Timer.js"
        edit the App.css file for the <span> tag for the Timer
        Check on this site-documentation for Dates in JavaScript:
                                        https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date
        This app tests basically on Reacts;
                                        Componets methods
                                        props validation
                                        constructor, and
                                        time-interval.
                                        
3. Course-Sales App:
        mkdir Course-Sales App
        cd Course-Sales App
        create-react-app course-purchase
        cd course-purchase
        npm start OR sudo npm start
        
        Create a new Component, "Coursesales.js"
        Read on ES6 Documentation of "map function"
        Inside Coursesales.js, create another component "Course"  (should be moved to its own component)
        
        This is just a simple react app that;
                       Display the list of available courses,
                       Users can select number of courses as it diplays their total amount,
                       To de-select a course, you double click it or reselect it again and the
                       total amount too will be displayed.    
                       

4. Random-Number Guessing Game:
        mkdir Random-Game
        cd Random-Game
        create-react-app random-number
        cd random-number
        npm start OR sudo npm start          
                                     
        This is just a random number guessing game which prompts the user to choose one among the numbers
        placed on the screen.
        Components;
                  Quiz.js, Quiz_Options.js
                  
        npm Library/package used; "classnames" - Link to install: https://www.npmjs.com/package/classnames
        
        CSS-Animation Link:  https://animate.style/
        Github Documentation Link:   https://github.com/animate-css/animate.css?files=1
               Use the CDN version and add it to the "index.html" file.
               
5. Easy ABC Alphabet Game:
        
        mkdir ABC Alphabet Game
        cd ABC Alphabet Game
        create-react-app alphabet-game
        cd alphabet-game
        npm start OR sudo npm start
        
        This is an easy-abc alphabet game that displays images of the 26 alphabet letters,
        together with their corresponding sounds. The sounds and images(from: "https://imgur.com/") are downloaded online,
         and encripted in the /src alphabets.json file.
        
        Components; EasyABC.js
        npm Library/package used; "classnames" - Link to install: https://www.npmjs.com/package/classnames
        
        
6. My Resume App:
        mkdir React Resume
        cd React Resume
        create-react-app resume
        cd resume
        npm start OR sudo npm start
        
        This resume is made by importing it from an existing online template.
        Download the resume online from this link:
        https://themes.3rdwavemedia.com/bootstrap-templates/resume/orbit-free-resume-cv-bootstrap-theme-for-developers/
        
        Once downloaded, copy the assets folder and paste it inside the public folder of your resume app.
        copy the head$$body section of the "assets/index.html", and replace it to the "public/index.html"  head$$body file.
        Again, copy the body section from "div class-wrapper", to the footer, leave out the footer while paste the entire-
         content to src/App.js component, while removing the {div class App} section. Remove the html comments too.
        Fetch data from a JSON file, by creating a "resume.json" file inside src folder. Import it inside App.js component.
        Fill in your "key":"value" details, in an Array structure, inside the .json file.
        
        Components:
                   Experience.js, Project.js, Skill.js, Education.js, Language.js
                   
                   
7. Food Recipes App:
           //https://www.allrecipes.com/
          // https://www.allrecipes.com/recipes/83/everyday-cooking/convenience-cooking/
        mkdir Recipe
        cd Recipe
        create-react-app food-recipe
        cd food-recipe
        npm start OR sudo npm start OR yarn start
        
        
        On the same dir/path through terminal, install react-bootstrap by;
                                                        npm i --save react-bootstrap
        Confirm if it is installed in the package.json file.
        
        Link to react-bootstrap from npm:
                                         https://www.npmjs.com/package/react-bootstrap
                                         
        Go to getbootstrap.com, and copy the CDN links to your /public/index.html file
        Again go to getbootstrap.com through the link above and pick a suitable Navbar for your site:
                                         https://getbootstrap.com/docs/4.5/examples/#navbars
                                         https://getbootstrap.com/docs/4.5/examples/navbar-fixed/
        Right-click to view page source, copy the nav section/tag, and paste it into App.js file.
        
        Install react-router by:
                                 npm install --save react-router
                                 npm install --save react-router-dom
                                           # or
                                 yarn add react-router
        Link to github Documentation:
                                     https://github.com/ReactTraining/react-router
        >>>>> Doccumentation: https://reactrouter.com/
              React-Dom for Web Tutorial : https://reactrouter.com/web/guides/quick-start
        Link to Version 4 of REACT-Router;  
         https://github.com/ReactTraining/react-router/blob/25776d4dc89b8fb2f575884749766355992116b5/packages/react-router/docs/guides/migrating.md#nesting-routes.
        
        
              Installing React Router globall:
                                              npm install --save react-router 
                                                     AND
                                              npm install --save react-router-dom       
        Confirm on package.json if it is installed.
        On your src/index.js file, add this to the imports bottom part:
                                                           import { Router, Route, BrowserRouter } from 'react-router-dom';
                                                           
                                                           then:
                                                           
                                                           ReactDOM.render(
                                                             <BrowserRouter>
                                                               <div>
                                                                  <Route path='/' component={App} />
                                                                  <Route path='/home' component={Home} />
                                                                  <Route path='/submit' component={Submit} />
                                                               </div>
                                                            </BrowserRouter>,
                                                            document.getElementById('root')
                                                            );
        Components;
                   Home.js, Submit.js, Ingredients.js, IngredientList.js
        On App.js, replace all the <a>-tags with NavLink, and href with "to"
        cut all your header code on App.js and paste it to index.js
        
        LOCAL STORAGE- JS
              Links: https://developers.google.com/web/tools/chrome-devtools/storage/localstorage?utm_source=devtools
                     https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage
                     https://www.w3schools.com/jsref/prop_win_localstorage.asp
                     https://www.taniarascia.com/how-to-use-local-storage-with-javascript/     
        
        Uploading Images- With Cloudinary;
              How to: https://css-tricks.com/image-upload-manipulation-react/
              
              The three tools I used include:

              *react-dropzone*- to accept an image from a user
                                 Link: https://github.com/react-dropzone/react-dropzone
                                 
              *superagent*- to transfer the uploaded image
                                 Link: https://github.com/visionmedia/superagent
                                 
              *Cloudinary*- to store and manipulate the images
                                 Link: https://cloudinary.com/
              
        Debugging Dropzone issues:
               https://react-dropzone.js.org/
               https://github.com/react-dropzone/react-dropzone/issues/727
               https://react-dropzone.js.org/#!/Basic%20example
               https://stackoverflow.com/questions/54167823/react-dropzone-issue-children-is-not-a-function
        
        
        
        
        
Link to Debugging npm:
                     https://stackoverflow.com/questions/47180722/create-react-app-failing-to-create-a-new-react-app-in-windows-10
        
        
